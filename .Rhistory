mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many ", noun, "-", verb, " ", p_noun, "on this", adj, "planet")
}
mad_libs("cheese", "eating", "mice", "spinning")
cat("there are too many", noun, "-", verb, " ", p_noun, "on this", adj, "planet")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun, "-", verb, " ", p_noun, "on this", adj, "planet")
}
mad_libs("cheese", "eating", "mice", "spinning")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun, "-", verb,
" ", p_noun, "on this", adj, "planet")
}
mad_libs("cheese", "eating", "mice", "spinning")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun, "-", verb,
p_noun, "on this", adj, "planet")
}
mad_libs("cheese", "eating", "mice", "spinning")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun + "-" + verb,
p_noun, "on this", adj, "planet")
}
mad_libs("cheese", "eating", "mice", "spinning")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun, "-", verb,
p_noun, "on this", adj, "planet")
}
mad_libs("cheese", "eating", "mice", "spinning")
cat("there are too many", noun, "-", verb,
p_noun, "on this", adj, "planet.")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun, "-", verb,
p_noun, "on this", adj, "planet.")
}
cat("there are too many", noun, "-", verb,
p_noun, "on this", adj, "planet.")
mad_libs <- function(noun, verb, p_noun, adj){
cat("there are too many", noun, "-", verb,
p_noun, "on this", adj, "planet.")
}
mad_libs("cheese", "eating", "mice", "spinning")
shiny::runApp('C:/Users/joshu/Desktop/final-projects-benedictwyt/Russia Ruble to USD')
library(shiny)
library(dplyr)
library(ggplot2)
#load in data
exchange_rate_df <- read.csv("USD_RUB Historical Data.csv")
setwd("C:/Users/joshu/Desktop/final-projects-benedictwyt/Russia Ruble to USD")
#load in data
exchange_rate_df <- read.csv("USD_RUB Historical Data.csv")
russia_losses_df <- read.csv("russia_losses_equipment.csv")
#cleaning and merging df
russia_losses_df <- russia_losses_df %>%
mutate(date = as.Date(russia_losses_df$date, "%Y-%m-%d"))
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(exchange_rate_df$Date, "%b %d,%Y")) %>%
arrange(date)
data_df <- left_join(exchange_rate_df, russia_losses_df, by = "date") %>%
select(date, Price, day, aircraft, helicopter, tank) %>%
filter(date > "2022-02-24")
#set up the UI
ui <- fluidPage(
titlePanel("Russia Ruble to USD since the Ukraine war"),
sidebarLayout(
sidebarPanel(
h3("Equipment"),
selectInput(
InputId = "equip",
label = "elect an equipment",
choices = list("aircraft", "helicopter"= 2)
)
)
),
mainPanel(
plotOutput(outputId = "scatter")
)
)
server <- function(input, output){
output$scatter <- renderPlot({
ggplot(data = data_df, aes(x=day, y = Price)) +
geom_point() +
geom_line()
})
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
shiny::runApp()
data_df <- left_join(exchange_rate_df, russia_losses_df, by = "date") %>%
select(date, Price, High, Low, day, aircraft, helicopter, tank) %>%
filter(date > "2022-02-24")
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(exchange_rate_df$Date, "%b %d,%Y")) %>%
arrange(date) %>%
filter(date > "2022-02-23") %>%
mutate(day = 1:nrow(exchange_rate_df))
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(exchange_rate_df$Date, "%b %d,%Y")) %>%
arrange(date) %>%
filter(date > "2022-02-23")
data_df <- exchange_rate_df %>%
mutate(day = 1:nrow(exchange_rate_df))
runApp('C:/Users/joshu/Desktop/UW/Info 201/lect 16')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/joshu/Desktop/UW/Info 201/lect 16')
runApp()
runApp()
runApp('C:/Users/joshu/Desktop/UW/Info 201/lect 16')
runApp()
runApp()
runApp('C:/Users/joshu/Desktop/UW/Info 201/lect 16')
runApp()
runApp()
runApp()
table <- data.frame(day = data_df$day,
high_price = data_df$High,
high = rep("High", nrow(data_df)),
low_price = data_df$Low,
low = rep("Low", nrow(data_df)))
View(table)
runApp()
shiny::runApp()
runApp()
runApp()
library(plotly)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/joshu/Desktop/UW/Info 201/lect 16')
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
runApp()
setwd("C:/Users/12064/final-projects-benedictwyt")
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv")
#cleaning and merging df
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(exchange_rate_df$Date, "%b %d,%Y")) %>%
arrange(date) %>%
filter(date > "2022-02-23")
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv")
#cleaning and merging df
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(as.character(exchange_rate_df$Date), "%b %d,%Y")) %>%
arrange(date) %>%
filter(date > "2022-02-23")
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(as.character(exchange_rate_df$Date), "%b %d,%Y")) %>%
arrange(date) %>%
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(as.character(exchange_rate_df$Date), "%b %d,%Y"))
View(exchange_rate_df)
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(as.character(exchange_rate_df$誰..Date), "%b %d,%Y")) %>%
arrange(date) %>%
filter(date > "2022-02-23")
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv")
#cleaning and merging df
exchange_rate_df <- setNames(exchange_rate_df$誰..Date, c("Date"))
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv")
exchange_rate_df$誰..Date <- setNames(exchange_rate_df, c("Date"))
View(exchange_rate_df)
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv")
#cleaning and merging df
exchange_rate_df <- exchange_rate_df %>%
mutate(date = as.Date(as.character(exchange_rate_df$Date), "%b %d,%Y")) %>%
arrange(date) %>%
filter(date > "2022-02-23")
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv, check.names = FALSE")
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv", check.names = FALSE)
View(exchange_rate_df)
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv")
View(exchange_rate_df)
exchange_rate_df <- read.csv("Russia Ruble to USD/USD_RUB Historical Data.csv", fileEncoding = 'UTF-8-BOM')
exchange_rate_df$誰..Date
View(exchange_rate_df)
runApp()
runApp('C:/Users/12064/Lecture16-benedictwyt')
runApp('appfv.R')
runApp('Russia Ruble to USD')
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp()
runApp()
runApp()
setwd("C:/Users/12064/final-projects-benedictwyt")
runApp()
#Package---------------------------------------------------------------------------------------
library(shiny)
library(dplyr)
library(fmsb)
library(shinyWidgets)
#data-----------------------------------------------------------------------------------------
bank_VTBR_df <- read.csv("Radar Chart data/VTBR Historical Data.csv", fileEncoding = 'UTF-8-BOM')
bank_VTBR_df <- select(bank_VTBR_df, Date, Price)
ebank_QIWI_df <- read.csv("Radar Chart data/QIWIDR Historical Data.csv", fileEncoding = 'UTF-8-BOM')
ebank_QIWI_df <- select(ebank_QIWI_df, Date, Price)
telecom_MTSS_df <- read.csv("Radar Chart data/MTSS Historical Data.csv", fileEncoding = 'UTF-8-BOM')
telecom_MTSS_df <- select(telecom_MTSS_df, Date, Price)
oil_LKOH_df <- read.csv("Radar Chart data/LKOH Historical Data.csv", fileEncoding = 'UTF-8-BOM')
oil_LKOH_df <- select(oil_LKOH_df, Date, Price)
airline_AFLT_df <- read.csv("Radar Chart data/AFLT Historical Data.csv", fileEncoding = 'UTF-8-BOM')
airline_AFLT_df <- select(airline_AFLT_df, Date, Price)
char_df <- merge(bank_VTBR_df, ebank_QIWI_df, by = "Date")
char_df <- merge(char_df, telecom_MTSS_df, by = "Date")
char_df <- merge(char_df, oil_LKOH_df, by = "Date")
char_df <- merge(char_df, airline_AFLT_df, by = "Date")
char_df <- setNames(char_df, c("Date", "Bank","Ebank","Telecom", "Oil", "Airline"))
#app----------------------------------------------------------------------------------------
ui <- fluidPage(
h1("Impact on Russian Corporations' Stock Value"),
em(h5("Which Industy is Most Significantly Damaged by the War?")),
setBackgroundColor("ghostwhite"),
br(),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "char",
label = "Select a Date",
choices = char_df$Date
),
h6("Note: Selecting a date allow you to vividly view the values on the table during that day via a fine Radar Chart: )"),
img(src = "Stock.jpeg", height = 49.9*1.9, width = 120*1.9)),
h6("Bank(VTB Bank): VTB Bank is a Russian majority state-owned bank headquartered in various federal districts of Russia"),
h6(""),
h6(""),
h6(""),
h6(""),
mainPanel(
h5(strong("Table Value of the Day"), h6("(Unit: USD)")),
tableOutput(outputId = "table"),
h5(strong("The Radar Chart")),
plotOutput(outputId = "radar")
)
))
server <- function(input, output) {
make_rader_df <- function(char_name){
rd_df <- select(char_df, - Date)
min_df <- summarise_all(rd_df, min)
max_df <- summarise_all(rd_df, max)
data_pt <- filter(char_df, Date == char_name)
data_pt <- select(data_pt, - Date)
return(do.call("rbind", list(max_df,min_df, data_pt)))
}
output$table <- renderTable({
return(make_rader_df(input$char))
})
output$radar <- renderPlot({
radarchart(make_rader_df(input$char))
})
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp('appfv.R')
runApp('app copy.r')
runApp('appfv.R')
runApp('appfv.R')
library(shiny); runApp('appfv.R')
library(shiny); runApp('appfv.R')
